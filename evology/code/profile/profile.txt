Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

<<<<<<< Updated upstream
Total time: 73.3377 s
=======
Total time: 80.7752 s
>>>>>>> Stashed changes
File: profile/profile.py
Function: main at line 10

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    10                                           @profile
    11                                           
    12                                           def main(
    13                                               space,
    14                                               solver,
    15                                               wealth_coordinates,
    16                                               POPULATION_SIZE,
    17                                               MAX_GENERATIONS,
    18                                               PROBA_SELECTION,
    19                                               MUTATION_RATE,
    20                                               ReinvestmentRate,
    21                                               InvestmentHorizon,
    22                                               tqdm_display,
    23                                               reset_wealth
    24                                           ):
    25                                               # Initialise important variables and dataframe to store results
    26         1          2.0      2.0      0.0      ReturnsNT, ReturnsVI, ReturnsTF = (
<<<<<<< Updated upstream
    27         1       1838.0   1838.0      0.0          np.zeros((MAX_GENERATIONS - data.Barr, POPULATION_SIZE)),
    28         1       1822.0   1822.0      0.0          np.zeros((MAX_GENERATIONS - data.Barr, POPULATION_SIZE)),
    29         1       2070.0   2070.0      0.0          np.zeros((MAX_GENERATIONS - data.Barr, POPULATION_SIZE)),
    30                                               )
    31         1          6.0      6.0      0.0      generation, CurrentPrice, dividend, spoils, InvestmentSupply = 0, InitialPrice, INITIAL_DIVIDEND, 0, RefInvestmentSupply * POPULATION_SIZE
    32         1       1293.0   1293.0      0.0      results = np.zeros((MAX_GENERATIONS - data.Barr, data.variables))
    33         1       2098.0   2098.0      0.0      wealth_tracker= np.zeros((MAX_GENERATIONS, POPULATION_SIZE))
    34         1       2095.0   2095.0      0.0      returns_tracker= np.zeros((MAX_GENERATIONS, POPULATION_SIZE))
    35         1          3.0      3.0      0.0      price_history, dividend_history = [], []
    36                                           
    37         1       4379.0   4379.0      0.0      pop, asset_supply = cr.CreatePop(POPULATION_SIZE, space, wealth_coordinates)
    38         1        177.0    177.0      0.0      bs.calculate_wealth(pop, CurrentPrice)
    39         1          9.0      9.0      0.0      bs.UpdatePrevWealth(pop)
    40                                           
    41     10002      96974.0      9.7      0.1      for generation in tqdm(
=======
    27         1       1963.0   1963.0      0.0          np.zeros((MAX_GENERATIONS - data.Barr, POPULATION_SIZE)),
    28         1       2020.0   2020.0      0.0          np.zeros((MAX_GENERATIONS - data.Barr, POPULATION_SIZE)),
    29         1       2198.0   2198.0      0.0          np.zeros((MAX_GENERATIONS - data.Barr, POPULATION_SIZE)),
    30                                               )
    31         1          6.0      6.0      0.0      generation, CurrentPrice, dividend, spoils, InvestmentSupply = 0, InitialPrice, INITIAL_DIVIDEND, 0, RefInvestmentSupply * POPULATION_SIZE
    32         1       1263.0   1263.0      0.0      results = np.zeros((MAX_GENERATIONS - data.Barr, data.variables))
    33         1       2297.0   2297.0      0.0      wealth_tracker= np.zeros((MAX_GENERATIONS, POPULATION_SIZE))
    34         1       2066.0   2066.0      0.0      returns_tracker= np.zeros((MAX_GENERATIONS, POPULATION_SIZE))
    35         1          4.0      4.0      0.0      price_history, dividend_history = [], []
    36                                           
    37         1       2658.0   2658.0      0.0      pop, asset_supply = cr.CreatePop(POPULATION_SIZE, space, wealth_coordinates)
    38         1         23.0     23.0      0.0      bs.calculate_wealth(pop, CurrentPrice)
    39         1          8.0      8.0      0.0      bs.UpdatePrevWealth(pop)
    40                                           
    41     10002      98932.0      9.9      0.1      for generation in tqdm(
>>>>>>> Stashed changes
    42         1          2.0      2.0      0.0          range(MAX_GENERATIONS), disable=tqdm_display, miniters=100, mininterval=0.5
    43                                               ):
    44                                           
    45                                                   # Population reset
<<<<<<< Updated upstream
    46     10000      70516.0      7.1      0.1          pop = cr.WealthReset(pop, space, wealth_coordinates, generation, reset_wealth)
    47                                           
    48                                                   # Hypermutation
    49     20000    1587778.0     79.4      2.2          pop, replacements, spoils = ga.hypermutate(
    50     10000      11233.0      1.1      0.0              pop,
    51     10000      11174.0      1.1      0.0              spoils,
    52                                                   )  # Replace insolvent agents
    53                                           
    54                                                   # Strategy evolution
    55     20000    4307740.0    215.4      5.9          pop, CountSelected, CountMutated, CountCrossed, StratFlow = ga_evolution(
    56     10000      11562.0      1.2      0.0              pop,
    57     10000      11429.0      1.1      0.0              space,
    58     10000      11335.0      1.1      0.0              generation,
    59     10000      11391.0      1.1      0.0              wealth_coordinates,
    60     10000      11532.0      1.2      0.0              PROBA_SELECTION,
    61     10000      11401.0      1.1      0.0              MUTATION_RATE,
    62                                                   )
    63                                           
    64                                                   # Calculate wealth and previous wealth
    65     10000     134721.0     13.5      0.2          bs.calculate_wealth(pop, CurrentPrice)
    66     10000      47595.0      4.8      0.1          bs.UpdatePrevWealth(pop)
    67                                           
    68                                                   # Market decisions (tsv, proc, edf)
    69     10000    1069225.0    106.9      1.5          pop = decision_updates(pop, price_history, dividend_history)
    70                                           
    71                                                   # Market clearing
    72     20000    4115669.0    205.8      5.6          pop, mismatch, CurrentPrice, price_history, ToLiquidate = marketClearing(
    73     10000      12169.0      1.2      0.0              pop, CurrentPrice, price_history, spoils, solver
    74                                                   )
    75                                           
    76                                                   # Market execution
    77     10000      12872.0      1.3      0.0          (
    78     10000      11512.0      1.2      0.0              pop,
    79     10000      11495.0      1.1      0.0              volume,
    80     10000      11184.0      1.1      0.0              dividend,
    81     10000      11457.0      1.1      0.0              random_dividend,
    82     10000      11317.0      1.1      0.0              dividend_history,
    83     10000      11368.0      1.1      0.0              spoils,
    84     20000     938127.0     46.9      1.3          ) = marketActivity(
    85     10000      11353.0      1.1      0.0              pop,
    86     10000      11166.0      1.1      0.0              CurrentPrice,
    87     10000      11298.0      1.1      0.0              asset_supply,
    88     10000      11067.0      1.1      0.0              dividend,
    89     10000      11095.0      1.1      0.0              dividend_history,
    90     10000      11094.0      1.1      0.0              spoils,
    91     10000      11131.0      1.1      0.0              ToLiquidate,
    92                                                   )
    93                                           
    94                                                   # Earnings, compute profits, age
    95     20000     569277.0     28.5      0.8          pop = update_wealth(
    96     10000      11402.0      1.1      0.0              pop,
    97     10000      11351.0      1.1      0.0              CurrentPrice,
    98     10000      11393.0      1.1      0.0              ReinvestmentRate,
    99                                                   )
   100                                           
   101                                                   # Investment
   102     10000      14748.0      1.5      0.0          (
   103     10000      11631.0      1.2      0.0              wealth_tracker, 
   104     10000      11505.0      1.2      0.0              returns_tracker, 
   105     10000      11251.0      1.1      0.0              pop, 
   106     10000      11423.0      1.1      0.0              propSignif
   107     20000   53681346.0   2684.1     73.2          ) = ApplyInvestment(
   108     10000      11532.0      1.2      0.0              pop, 
   109     10000      11387.0      1.1      0.0              generation, 
   110     10000      11311.0      1.1      0.0              wealth_tracker, 
   111     10000      11239.0      1.1      0.0              returns_tracker, 
   112     10000      11294.0      1.1      0.0              InvestmentHorizon, 
   113     10000      11327.0      1.1      0.0              InvestmentSupply, 
   114                                                   )
   115                                           
   116                                                   # Record results
   117                                                   # wealth_tracker = iv.WealthTracking(wealth_tracker, pop, generation)
   118     20000    6057430.0    302.9      8.3          results, wealth_tracker, ReturnsNT, ReturnsVI, ReturnsTF = data.record_results(
   119     10000      11607.0      1.2      0.0              results,
   120     10000      11399.0      1.1      0.0              wealth_tracker,
   121     10000      11450.0      1.1      0.0              generation,
   122     10000      11373.0      1.1      0.0              CurrentPrice,
   123     10000      11424.0      1.1      0.0              mismatch,
   124     10000      11546.0      1.2      0.0              dividend,
   125     10000      11410.0      1.1      0.0              random_dividend,
   126     10000      11465.0      1.1      0.0              volume,
   127     10000      11346.0      1.1      0.0              replacements,
   128     10000      11355.0      1.1      0.0              pop,
   129     10000      11480.0      1.1      0.0              spoils,
   130     10000      11650.0      1.2      0.0              asset_supply,
   131     10000      11720.0      1.2      0.0              ReturnsNT,
   132     10000      11563.0      1.2      0.0              ReturnsVI,
   133     10000      11473.0      1.1      0.0              ReturnsTF,
   134     10000      11518.0      1.2      0.0              CountSelected,
   135     10000      11466.0      1.1      0.0              CountMutated,
   136     10000      11521.0      1.2      0.0              CountCrossed,
   137     10000      11593.0      1.2      0.0              StratFlow,
   138                                                   )
   139                                           
   140         1       1676.0   1676.0      0.0      df = pd.DataFrame(results, columns=data.columns)
   141                                           
   142         1          2.0      2.0      0.0      return df, pop, ReturnsNT, ReturnsVI, ReturnsTF
=======
    46     10000      71461.0      7.1      0.1          pop = cr.WealthReset(pop, space, wealth_coordinates, generation, reset_wealth)
    47                                           
    48                                                   # Hypermutation
    49     20000    1568109.0     78.4      1.9          pop, replacements, spoils = ga.hypermutate(
    50     10000      11265.0      1.1      0.0              pop,
    51     10000      11164.0      1.1      0.0              spoils,
    52                                                   )  # Replace insolvent agents
    53                                           
    54                                                   # Strategy evolution
    55     20000    4379826.0    219.0      5.4          pop, CountSelected, CountMutated, CountCrossed, StratFlow = ga_evolution(
    56     10000      11651.0      1.2      0.0              pop,
    57     10000      11359.0      1.1      0.0              space,
    58     10000      11271.0      1.1      0.0              generation,
    59     10000      11474.0      1.1      0.0              wealth_coordinates,
    60     10000      11347.0      1.1      0.0              PROBA_SELECTION,
    61     10000      11309.0      1.1      0.0              MUTATION_RATE,
    62                                                   )
    63                                           
    64                                                   # Calculate wealth and previous wealth
    65     10000     132689.0     13.3      0.2          bs.calculate_wealth(pop, CurrentPrice)
    66     10000      46528.0      4.7      0.1          bs.UpdatePrevWealth(pop)
    67                                           
    68                                                   # Market decisions (tsv, proc, edf)
    69     10000    1112217.0    111.2      1.4          pop = decision_updates(pop, price_history, dividend_history)
    70                                           
    71                                                   # Market clearing
    72     20000    4090719.0    204.5      5.1          pop, mismatch, CurrentPrice, price_history, ToLiquidate = marketClearing(
    73     10000      12028.0      1.2      0.0              pop, CurrentPrice, price_history, spoils, solver
    74                                                   )
    75                                           
    76                                                   # Market execution
    77     10000      12729.0      1.3      0.0          (
    78     10000      11442.0      1.1      0.0              pop,
    79     10000      11509.0      1.2      0.0              volume,
    80     10000      11362.0      1.1      0.0              dividend,
    81     10000      11420.0      1.1      0.0              random_dividend,
    82     10000      11291.0      1.1      0.0              dividend_history,
    83     10000      11413.0      1.1      0.0              spoils,
    84     20000     899869.0     45.0      1.1          ) = marketActivity(
    85     10000      11377.0      1.1      0.0              pop,
    86     10000      11171.0      1.1      0.0              CurrentPrice,
    87     10000      11127.0      1.1      0.0              asset_supply,
    88     10000      11052.0      1.1      0.0              dividend,
    89     10000      11079.0      1.1      0.0              dividend_history,
    90     10000      11108.0      1.1      0.0              spoils,
    91     10000      11045.0      1.1      0.0              ToLiquidate,
    92                                                   )
    93                                           
    94                                                   # Earnings, compute profits, age
    95     20000     564038.0     28.2      0.7          pop = update_wealth(
    96     10000      11369.0      1.1      0.0              pop,
    97     10000      11323.0      1.1      0.0              CurrentPrice,
    98     10000      11341.0      1.1      0.0              ReinvestmentRate,
    99                                                   )
   100                                           
   101                                                   # Investment
   102     10000      12039.0      1.2      0.0          (
   103     10000      11553.0      1.2      0.0              wealth_tracker, 
   104     10000      11412.0      1.1      0.0              returns_tracker 
   105     20000     740636.0     37.0      0.9          ) = data.UpdateWealthReturnTracking(
   106     10000      11446.0      1.1      0.0              wealth_tracker, 
   107     10000      11391.0      1.1      0.0              returns_tracker, 
   108     10000      11213.0      1.1      0.0              pop, 
   109     10000      11214.0      1.1      0.0              generation
   110                                                   )
   111     10000      14905.0      1.5      0.0          (
   112     10000      11785.0      1.2      0.0              returns_tracker, 
   113     10000      11419.0      1.1      0.0              pop, 
   114     10000      11400.0      1.1      0.0              propSignif
   115     20000   60298952.0   3014.9     74.7          ) = ApplyInvestment(
   116     10000      11496.0      1.1      0.0              pop, 
   117     10000      11417.0      1.1      0.0              generation, 
   118     10000      11320.0      1.1      0.0              returns_tracker, 
   119     10000      11269.0      1.1      0.0              InvestmentHorizon, 
   120     10000      11471.0      1.1      0.0              InvestmentSupply, 
   121                                                   )
   122                                           
   123                                                   # Record results
   124                                                   # wealth_tracker = iv.WealthTracking(wealth_tracker, pop, generation)
   125     20000    6052974.0    302.6      7.5          results, wealth_tracker, ReturnsNT, ReturnsVI, ReturnsTF = data.record_results(
   126     10000      11683.0      1.2      0.0              results,
   127     10000      11481.0      1.1      0.0              wealth_tracker,
   128     10000      11512.0      1.2      0.0              generation,
   129     10000      11436.0      1.1      0.0              CurrentPrice,
   130     10000      11422.0      1.1      0.0              mismatch,
   131     10000      11539.0      1.2      0.0              dividend,
   132     10000      11497.0      1.1      0.0              random_dividend,
   133     10000      11547.0      1.2      0.0              volume,
   134     10000      11400.0      1.1      0.0              replacements,
   135     10000      11478.0      1.1      0.0              pop,
   136     10000      11544.0      1.2      0.0              spoils,
   137     10000      11536.0      1.2      0.0              asset_supply,
   138     10000      11933.0      1.2      0.0              ReturnsNT,
   139     10000      11700.0      1.2      0.0              ReturnsVI,
   140     10000      11617.0      1.2      0.0              ReturnsTF,
   141     10000      11482.0      1.1      0.0              CountSelected,
   142     10000      11511.0      1.2      0.0              CountMutated,
   143     10000      11656.0      1.2      0.0              CountCrossed,
   144     10000      11718.0      1.2      0.0              StratFlow,
   145                                                   )
   146                                           
   147         1       1244.0   1244.0      0.0      df = pd.DataFrame(results, columns=data.columns)
   148                                           
   149         1          2.0      2.0      0.0      return df, pop, ReturnsNT, ReturnsVI, ReturnsTF
>>>>>>> Stashed changes

