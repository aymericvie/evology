         Gen  Price     Mismatch  Dividends  ...  NTflows  VIflows  TFflows  AvgAge
0        0.0  85.60 -1012.939621   0.004040  ...      0.0      0.0      0.0     1.0
1        1.0  85.92  1041.599607   0.004006  ...      0.0      0.0      0.0    23.0
2        2.0  84.01  1169.316493   0.004035  ...      0.0      0.0      0.0    24.0
3        3.0  82.43   283.853740   0.004031  ...      0.0      0.0      0.0    25.0
4        4.0  82.53   -32.473817   0.004019  ...      0.0      0.0      0.0    26.0
...      ...    ...          ...        ...  ...      ...      ...      ...     ...
2974  2974.0  43.34  1635.841130   0.002115  ...      0.0      0.0      0.0  2996.0
2975  2975.0  42.37 -4696.163181   0.002112  ...      0.0      0.0      0.0  2997.0
2976  2976.0  42.05 -2514.230902   0.002125  ...      0.0      0.0      0.0  2998.0
2977  2977.0  42.81  3006.460658   0.002106  ...      0.0      0.0      0.0  2999.0
2978  2978.0  43.88 -4921.892899   0.002107  ...      0.0      0.0      0.0  3000.0

[2979 rows x 75 columns]
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 1.52194 s
File: profile/profile.py
Function: main at line 10

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    10                                           @profile
    11                                           
    12                                           def main(
    13                                               space,
    14                                               solver,
    15                                               wealth_coordinates,
    16                                               POPULATION_SIZE,
    17                                               MAX_GENERATIONS,
    18                                               PROBA_SELECTION,
    19                                               MUTATION_RATE,
    20                                               ReinvestmentRate,
    21                                               InvestmentHorizon,
    22                                               InvestorBehavior,
    23                                               tqdm_display,
    24                                               reset_wealth
    25                                           ):
    26                                               # Initialise important variables and dataframe to store results
    27         1          3.0      3.0      0.0      ReturnsNT, ReturnsVI, ReturnsTF = (
    28         1         56.0     56.0      0.0          np.zeros((MAX_GENERATIONS - data.Barr, POPULATION_SIZE)),
    29         1         12.0     12.0      0.0          np.zeros((MAX_GENERATIONS - data.Barr, POPULATION_SIZE)),
    30         1         10.0     10.0      0.0          np.zeros((MAX_GENERATIONS - data.Barr, POPULATION_SIZE)),
    31                                               )
    32         1          2.0      2.0      0.0      generation, CurrentPrice, dividend, spoils = 0, InitialPrice, INITIAL_DIVIDEND, 0
    33         1        712.0    712.0      0.0      results = np.zeros((MAX_GENERATIONS - data.Barr, data.variables))
    34         1         20.0     20.0      0.0      wealth_tracker= np.zeros((MAX_GENERATIONS, POPULATION_SIZE))
    35         1         41.0     41.0      0.0      wealth_tracker_noinv = np.zeros((MAX_GENERATIONS, POPULATION_SIZE))
    36         1         46.0     46.0      0.0      returns_tracker= np.zeros((MAX_GENERATIONS, POPULATION_SIZE))
    37         1          2.0      2.0      0.0      price_history, dividend_history = [], []
    38         1        182.0    182.0      0.0      TestThreshold = stdtrit(InvestmentHorizon, 0.95)
    39         1          2.0      2.0      0.0      InvestmentIntensity = 1.0
    40         1          7.0      7.0      0.0      InvestmentSupply = RefInvestmentSupply * POPULATION_SIZE * max(0, ReinvestmentRate - 1)
    41                                           
    42         1        326.0    326.0      0.0      pop, asset_supply = cr.CreatePop(POPULATION_SIZE, space, wealth_coordinates)
    43         1         19.0     19.0      0.0      bs.calculate_wealth(pop, CurrentPrice)
    44         1          7.0      7.0      0.0      bs.UpdatePrevWealth(pop)
    45                                           
    46      3002      33126.0     11.0      2.2      for generation in tqdm(
    47         1          3.0      3.0      0.0          range(MAX_GENERATIONS), disable=tqdm_display, miniters=100, mininterval=0.5
    48                                               ):
    49      3000       4508.0      1.5      0.3          InvestmentSupply = InvestmentSupply * (1+INTEREST_RATE)
    50                                           
    51                                                   # Population reset
    52      3000      13477.0      4.5      0.9          pop = cr.WealthReset(pop, space, wealth_coordinates, generation, reset_wealth)
    53                                           
    54                                                   # Hypermutation
    55      6000      24850.0      4.1      1.6          pop, replacements, spoils = ga.hypermutate(
    56      3000       3791.0      1.3      0.2              pop,
    57      3000       3830.0      1.3      0.3              spoils,
    58                                                   )  # Replace insolvent agents
    59                                           
    60                                                   # Strategy evolution
    61      6000      64194.0     10.7      4.2          pop, CountSelected, CountMutated, CountCrossed, StratFlow = ga_evolution(
    62      3000       3844.0      1.3      0.3              pop,
    63      3000       3741.0      1.2      0.2              space,
    64      3000       3769.0      1.3      0.2              generation,
    65      3000       3820.0      1.3      0.3              wealth_coordinates,
    66      3000       3795.0      1.3      0.2              PROBA_SELECTION,
    67      3000       3815.0      1.3      0.3              MUTATION_RATE,
    68      3000       3783.0      1.3      0.2              InvestmentHorizon
    69                                                   )
    70                                           
    71                                                   # Calculate wealth and previous wealth
    72      3000       5929.0      2.0      0.4          bs.calculate_wealth(pop, CurrentPrice)
    73      3000       5418.0      1.8      0.4          bs.UpdatePrevWealth(pop)
    74                                           
    75                                                   # Market decisions (tsv, proc, edf)
    76      3000      35860.0     12.0      2.4          pop = decision_updates(pop, price_history, dividend_history)
    77                                           
    78                                                   # Market clearing
    79      6000     329906.0     55.0     21.7          pop, mismatch, CurrentPrice, price_history, ToLiquidate = marketClearing(
    80      3000       3971.0      1.3      0.3              pop, CurrentPrice, price_history, spoils, solver
    81                                                   )
    82                                           
    83                                                   # Market execution
    84      3000       4244.0      1.4      0.3          (
    85      3000       3873.0      1.3      0.3              pop,
    86      3000       3888.0      1.3      0.3              volume,
    87      3000       3802.0      1.3      0.2              dividend,
    88      3000       3843.0      1.3      0.3              random_dividend,
    89      3000       3768.0      1.3      0.2              dividend_history,
    90      3000       3756.0      1.3      0.2              spoils,
    91      3000       3751.0      1.3      0.2              Liquidations,
    92      6000      42029.0      7.0      2.8          ) = marketActivity(
    93      3000       3825.0      1.3      0.3              pop,
    94      3000       3799.0      1.3      0.2              CurrentPrice,
    95      3000       3770.0      1.3      0.2              asset_supply,
    96      3000       3766.0      1.3      0.2              dividend,
    97      3000       3776.0      1.3      0.2              dividend_history,
    98      3000       3724.0      1.2      0.2              spoils,
    99      3000       3741.0      1.2      0.2              ToLiquidate,
   100                                                   )
   101                                           
   102                                                   # Earnings, compute profits, age
   103      6000      16862.0      2.8      1.1          pop = update_wealth(
   104      3000       3788.0      1.3      0.2              pop,
   105      3000       3817.0      1.3      0.3              CurrentPrice,
   106                                                   )
   107                                           
   108                                                   # Investment
   109      3000       3973.0      1.3      0.3          (
   110      3000       3850.0      1.3      0.3              wealth_tracker, 
   111      3000       3798.0      1.3      0.2              wealth_tracker_noinv,
   112      3000       3817.0      1.3      0.3              returns_tracker
   113      6000      16826.0      2.8      1.1          ) = data.UpdateWealthReturnTracking(
   114      3000       3934.0      1.3      0.3              wealth_tracker, 
   115      3000       3893.0      1.3      0.3              wealth_tracker_noinv,
   116      3000       3843.0      1.3      0.3              returns_tracker, 
   117      3000       3871.0      1.3      0.3              pop, 
   118      3000       3812.0      1.3      0.3              generation
   119                                                   )
   120                                           
   121      3000       4200.0      1.4      0.3          (
   122      3000       3915.0      1.3      0.3              pop, 
   123      3000       3923.0      1.3      0.3              AvgT, 
   124      3000       3920.0      1.3      0.3              PropSignif, 
   125      3000       3832.0      1.3      0.3              HighestT, 
   126      3000       3937.0      1.3      0.3              AvgAbsT 
   127      6000      41183.0      6.9      2.7          ) = ProfitDrivenInvestment(
   128      3000       3887.0      1.3      0.3              pop, 
   129      3000       3856.0      1.3      0.3              generation, 
   130      3000       3827.0      1.3      0.3              returns_tracker, 
   131      3000       3893.0      1.3      0.3              InvestmentHorizon, 
   132      3000       3893.0      1.3      0.3              TestThreshold,
   133      3000       3933.0      1.3      0.3              InvestorBehavior,
   134      3000       3915.0      1.3      0.3              ReinvestmentRate
   135                                                   )
   136                                                   #pop = ApplyReinvestment(pop, ReinvestmentRate)
   137                                           
   138                                                   # Record results
   139                                                   # wealth_tracker = iv.WealthTracking(wealth_tracker, pop, generation)
   140      6000     594925.0     99.2     39.1          results, wealth_tracker, wealth_tracker_noinv, ReturnsNT, ReturnsVI, ReturnsTF = data.record_results(
   141      3000       3936.0      1.3      0.3              results,
   142      3000       3841.0      1.3      0.3              wealth_tracker,
   143      3000       3827.0      1.3      0.3              wealth_tracker_noinv,
   144      3000       3833.0      1.3      0.3              generation,
   145      3000       3819.0      1.3      0.3              CurrentPrice,
   146      3000       3856.0      1.3      0.3              mismatch,
   147      3000       3888.0      1.3      0.3              dividend,
   148      3000       3903.0      1.3      0.3              random_dividend,
   149      3000       3885.0      1.3      0.3              volume,
   150      3000       3886.0      1.3      0.3              replacements,
   151      3000       3922.0      1.3      0.3              pop,
   152      3000       3907.0      1.3      0.3              spoils,
   153      3000       3926.0      1.3      0.3              Liquidations,
   154      3000       3928.0      1.3      0.3              asset_supply,
   155      3000       3960.0      1.3      0.3              ReturnsNT,
   156      3000       3911.0      1.3      0.3              ReturnsVI,
   157      3000       3936.0      1.3      0.3              ReturnsTF,
   158      3000       3911.0      1.3      0.3              CountSelected,
   159      3000       3916.0      1.3      0.3              CountMutated,
   160      3000       3885.0      1.3      0.3              CountCrossed,
   161      3000       3896.0      1.3      0.3              StratFlow,
   162      3000       3913.0      1.3      0.3              AvgT,
   163      3000       3919.0      1.3      0.3              TestThreshold,
   164      3000       3928.0      1.3      0.3              PropSignif,
   165      3000       3941.0      1.3      0.3              HighestT,
   166      3000       3968.0      1.3      0.3              AvgAbsT 
   167                                                   )
   168                                           
   169         1       1141.0   1141.0      0.1      df = pd.DataFrame(results, columns=data.columns)
   170                                           
   171         1          2.0      2.0      0.0      return df, pop

